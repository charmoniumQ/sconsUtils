# -*- python -*-

import os
import lsst.sconsUtils
from lsst.sconsUtils import ExternalConfiguration
from lsst.sconsUtils.utils import use_conda_compilers, get_conda_prefix

dependencies = {
    "required": [],
}

class EigenConfiguration(ExternalConfiguration):

    def configure(self, conf, packages, check=False, build=True):
        configured = ExternalConfiguration.configure(self, conf, packages, check, build)
        if use_conda_compilers():
            # Support header namespaces in conda-forge
            includePath = os.path.join(get_conda_prefix(), "include/eigen3")
        conf.env.AppendUnique(XCPPPATH=includePath)
        return configured

config = EigenConfiguration(
    __file__,
    headers=["Eigen/Core"],
    libs=[],
)
